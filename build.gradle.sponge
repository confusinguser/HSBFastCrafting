import java.util.function.Predicate

buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sponge"
            url = "https://repo.spongepowered.org/maven"
        }
    }

    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.1-SNAPSHOT'
        classpath 'org.spongepowered:mixingradle:0.6-SNAPSHOT'
    }
}

apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'org.spongepowered.mixin'

version = "1.0"
group = "com.confusinguser.duplicateholoremover" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "DuplicateHoloRemover"
compileJava.options.encoding = 'UTF-8'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8
minecraft {
    version = "1.8.9-11.15.1.1722"
    runDir = "run"

    mappings = "stable_22"
}

repositories {
    mavenCentral()
    maven {
        name = 'sponge'
        url = 'http://repo.spongepowered.org/maven'
    }
}

dependencies {
    provided('org.spongepowered:mixin:0.6.4-SNAPSHOT') {}
}

jar {
    archiveName = archivesBaseName + "-" + version + ".jar"
    Set<File> files = configurations.provided.asFileTree.files
    files.removeIf(new Predicate<File>() {
        @Override
        boolean test(File file) {
            return !file.path.contains("org.spongepowered")
        }
    })

    from files.collect {
        zipTree(it)
    }

    manifest.attributes(
            'MixinConfigs': 'mixins.duplicateholoremover.json',
            'TweakOrder': '0',
            'TweakClass': 'org.spongepowered.asm.launch.MixinTweaker',
            'FMLCorePluginContainsFMLMod': 'true',
    )

}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

mixin {
    defaultObfuscationEnv searge
    add sourceSets.main, "mixins.duplicateholoremover.refmap.json"
}